---
name: duck-TV
version: dev
slug: duck-TV
description: Full media control by voice! Powered by DuckDNS & duck-TV!
url: "https://github.com/pungkula1337anka/ha-addons/"
arch:
  - armhf
  - armv7
  - amd64
  - aarch64
startup: services
map:
  - "share:rw"
  - "nedia:rw"
  - config
  - "ssl:rw"
host_network: true
options:
  media: 
    movies: /media/movies
    tv: /media/tv
  args: []
  env_vars: []
  log_level: info
schema:
  addon:
    addonport: 9413
  duckdns:
    authkey: str?
    domain: str?
  homeassistant: 
    homeassistant: localhost
    port: 8123
    longlivedaccesstoken: accesstoken
  assist_language: list(en|sv)
# Define your Home Assistant connection.
  home_assistant_ip: YOUR_HOME_ASSISTANT_IP:8123
  access_token: YOUR_LONG_LIVED_ACCESS_TOKEN
  your_domain: EXAMPLE_HA_DOMAIN.duckdns.org:8123

# Reverse Proxy your /media as file server at this domain. (For Chromecast)
  webserver: https://EXAMPLE.duckdns.org

# Grab your API Key from Google Developer.
  youtube_api_key: YOUR_YOUTUBE_API_KEY

# Define media_player & attribute for grabbing currently playing data.
  entity_id: media_player.shield
  attribute_name: media_title

# Defining your default playlist to simplify automations.
  default_playlist: /media/Playlists/MyPlaylist2.m3u

# Stores recently played news data to avoid hearing duplicates.
  played_news_file: played_news.txt
  max_played_news_entries: 350

  intro_url: https://qwackify.duckdns.org/intro.mp4

# Define your /media folders here.
  search_folders:
    tv: /media/TV
    music: /media/Music
    movie: /media/Movies
    podcast: /media/Podcasts
    musicvideo: /media/Music_Videos
    audiobooks: /media/Audiobooks
    othervideos: /media/Other_Videos
    jukebox: /media/Music

# Define your local News casts REST API's here.
  news_api_list:
    - http://api.sr.se/api/v2/news/episodes?format=json
    - http://api.sr.se/api/v2/podfiles?programid=178&format=json
    - http://api.sr.se/api/v2/podfiles?programid=5524&format=json
    - http://api.sr.se/api/v2/podfiles?programid=5413&format=json

# Define your Live-TV channels here.
  livetv_channels:
    - channel_name: 1
      channel_url: http://example.com:1233/asdko23/291dmasi/93213

# If you are having issues with Speech to Text translating or generating wrong words, you can correct them here.
  corrections:
    - wrong_word: wrong word
      right_word: right word
# Define your Home Assistant connection.
  home_assistant_ip: YOUR_HOME_ASSISTANT_IP:8123
  access_token: YOUR_LONG_LIVED_ACCESS_TOKEN
  your_domain: EXAMPLE_HA_DOMAIN.duckdns.org:8123

# Reverse Proxy your /media as file server at this domain. (For Chromecast)
  webserver: https://EXAMPLE.duckdns.org

# Grab your API Key from Google Developer.
  youtube_api_key: YOUR_YOUTUBE_API_KEY

# Define media_player & attribute for grabbing currently playing data.
  entity_id: media_player.shield
  attribute_name: media_title

# Defining your default playlist to simplify automations.
  default_playlist: /media/Playlists/MyPlaylist2.m3u

# Stores recently played news data to avoid hearing duplicates.
  played_news_file: played_news.txt
  max_played_news_entries: 350

  intro_url: https://qwackify.duckdns.org/intro.mp4

# Define your /media folders here.
  search_folders:
    tv: /media/TV
    music: /media/Music
    movie: /media/Movies
    podcast: /media/Podcasts
    musicvideo: /media/Music_Videos
    audiobooks: /media/Audiobooks
    othervideos: /media/Other_Videos
    jukebox: /media/Music

# Define your local News casts REST API's here.
  news_api_list:
    - http://api.sr.se/api/v2/news/episodes?format=json
    - http://api.sr.se/api/v2/podfiles?programid=178&format=json
    - http://api.sr.se/api/v2/podfiles?programid=5524&format=json
    - http://api.sr.se/api/v2/podfiles?programid=5413&format=json

# Define your Live-TV channels here.
  livetv_channels:
    - channel_name: 1
      channel_url: http://example.com:1233/asdko23/291dmasi/93213

# If you are having issues with Speech to Text translating or generating wrong words, you can correct them here.
  corrections:
    - wrong_word: wrong word
      right_word: right word
  
  env_vars:
  log_level: list(trace|debug|info|notice|warning|error|fatal)
environment:
  LOG_FORMAT: "{LEVEL}: {MESSAGE}"
init: false
